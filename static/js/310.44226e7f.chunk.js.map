{"version":3,"file":"static/js/310.44226e7f.chunk.js","mappings":"iPAGaA,EAAQC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAIlBC,EAAOH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mGAOlBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0LAYpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wMAgBtBO,EAAYT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gDAKrBS,EAAYX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kDAKrBW,GAAYb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAYe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,gE,2BCGrC,EAlDe,WACX,IAAAc,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACQ,KAAVb,GAOJU,EAAgB,CAAEV,MAAAA,IAElBc,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,IAAU,uBAADC,OAAwBf,EAAK,8CAA6CgB,MAAK,SAAAC,GACpFZ,EAASY,EAAEC,KAAKC,QACpB,KAZQR,EAASS,QACTnB,EAASU,EAASS,OAAOC,MAAM,KAAKC,MAYhD,GAAG,CAACtB,EAAOU,EAAiBD,EAAcE,EAASS,SAUnD,OACIG,EAAAA,EAAAA,MAACC,EAAS,CAAAC,SAAA,EACNF,EAAAA,EAAAA,MAACC,EAAQ,CAACE,SATG,SAACC,GAClBA,EAAEC,iBACF3B,EAAS0B,EAAEE,OAAOC,SAAS9B,MAAM+B,MACrC,EAMyCN,SAAA,EAC7BO,EAAAA,EAAAA,KAACR,EAAS,CAACS,KAAK,OAAOC,KAAK,WAC5BF,EAAAA,EAAAA,KAACR,EAAU,CAACS,KAAK,SAAQR,SAAC,eAE9BO,EAAAA,EAAAA,KAACR,EAAa,CAAAC,SAENrB,EAAM+B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOJ,EAAIE,EAAJF,KAAI,OACxBF,EAAAA,EAAAA,KAACR,EAAa,CAAAC,UAAUO,EAAAA,EAAAA,KAACR,EAAa,CAACe,GAAE,WAAAxB,OAAasB,GAAMG,MAAO,CAAEC,KAAM9B,GAAWc,SAAEa,GAASJ,KAA7EG,EAAkH,QAM9J,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Block = styled.div`\n  margin-left: 25px;\n`;\n\nexport const Form = styled.form`\n  margin: 25px 0;\n  width: 412px;\n  border: 1px solid #b6b6b6;\n  border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 300px;\n  border-radius: 5px;\n  border: 0;\n  outline: 0;\n  padding-left: 15px;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: 1.5px;\n`;\n\nexport const Button = styled.button`\n  height: 50px;\n  border: 0;\n  cursor: pointer;\n  width: 95px;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 5px;\n  &:hover {\n    color: #fff;\n    background: blue;\n  }\n`;\n\n\n\nexport const ListFilms = styled.ul`\n  font-size: 25px;\n  margin-top: 0;\n`;\n\nexport const ItemFilms = styled.li`\n  padding-bottom: 9px;\n  color: blue;\n`;\n\nexport const LinkFilms = styled(Link)`\n  color: #000;\n\n  &:hover {\n    color: blue;\n  }\n`;","import React, { useEffect, useState } from 'react'\nimport * as css from './Movies.styled';\nimport axios from 'axios';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');\n    const [films, setFilms] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n\n    useEffect(() => {\n        if (query === '') {\n            if (location.search) {\n                setQuery(location.search.split(\"=\").pop())\n            }\n            return;\n        }\n\n        setSearchParams({ query })\n\n        axios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\n\n        axios.get(`/search/movie?query=${query}&api_key=447d26a219f86948e4a42746453807c3`).then(r => {\n            setFilms(r.data.results)\n        });\n    }, [query, setSearchParams, searchParams, location.search]);\n\n\n    const onInputQuery = (e) => {\n        e.preventDefault();\n        setQuery(e.target.elements.query.value)\n    }\n\n\n\n    return (\n        <css.Block>\n            <css.Form onSubmit={onInputQuery}>\n                <css.Input type=\"text\" name=\"query\" />\n                <css.Button type=\"submit\">Search</css.Button>\n            </css.Form>\n            <css.ListFilms>\n                {\n                    films.map(({ id, title, name }) => (\n                        <css.ItemFilms key={id}><css.LinkFilms to={`/movies/${id}`} state={{ from: location }}>{title || name}</css.LinkFilms></css.ItemFilms>\n                    ))\n                }\n            </css.ListFilms>\n        </css.Block >\n    )\n}\n\n\nexport default Movies"],"names":["Block","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Input","_templateObject3","Button","_templateObject4","ListFilms","_templateObject5","ItemFilms","_templateObject6","LinkFilms","Link","_templateObject7","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","films","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","axios","concat","then","r","data","results","search","split","pop","_jsxs","css","children","onSubmit","e","preventDefault","target","elements","value","_jsx","type","name","map","_ref","id","title","to","state","from"],"sourceRoot":""}