{"version":3,"file":"static/js/737.1229b433.chunk.js","mappings":"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","sources":["pages/MoviesDetalies/MoviesDetalies.styled.js","pages/MoviesDetalies/MoviesDetalies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nexport const Btn = styled.div`\n  padding: 5px 15px;\n  border: 1px solid blue;\n  border-radius: 10px;\n  margin-top: 35px;\n  margin-left: 25px;\n  width: 55px;\n  margin-bottom: 2px;\n  color: #000;\n`;\n\n\n\n\nexport const Block = styled.div`\n  margin: 0 25px 0 25px;\n  display: flex;\n  border-bottom: 1px dashed grey;\n  padding-bottom: 40px;\n`;\n\nexport const Img = styled.img`\n  height: 600px;\n  width: auto;\n  border-radius: 10px;\n  margin-right: 25px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n  font-size: 36px;\n`;\n\nexport const TextBlock = styled.div`\n  width: 700px;\n`;\n\nexport const Score = styled.p`\n  font-size: 20px;\n`;\n\nexport const Overview = styled.p`\n  text-align: justify;\n  font-size: 17px;\n`;\n\nexport const Genres = styled.p`\n  text-align: justify;\n  font-size: 17px;\n`;\n\nexport const GenresBtn = styled.button`\n  font-size: 17px;\n  margin-right: 10px;\n  border: 1px solid blue;\n  padding: 13px;\n  border-radius: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  background: #fff;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const InfoTitle = styled.h2`\n  margin-bottom: 30px;\n  margin-top: 30px;\n`;\n\nexport const Info = styled(NavLink)`\n  font-size: 17px;\n  margin-right: 10px;\n  border: 1px solid blue;\n  padding: 13px;\n  border-radius: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  background: #fff;\n  color: #000;\n\n  &:hover {\n    text-decoration: underline;\n  }\n  &.active {\n    color: blue;\n  }\n`;\n\n\nexport const NotFoto = styled.div`\n  height: 600px;\n  width: 400px;\n  min-width: 400px;\n  clip-path: polygon(\n    5% 0%,\n    50% 45%,\n    95% 0%,\n    100% 5%,\n    55% 50%,\n    100% 95%,\n    95% 100%,\n    50% 55%,\n    5% 100%,\n    0% 95%,\n    45% 50%,\n    0% 5%\n  );\n  background-color: #c4c4c4;\n  margin-right: 25px;\n`;","import React, { useEffect, useState } from 'react'\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom'\nimport * as css from './MoviesDetalies.styled';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\n\nconst MoviesDetalies = () => {\n  const { moviesID } = useParams();\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n\n\n\n\n  useEffect(() => {\n    axios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\n\n    axios.get(`/movie/${moviesID}?api_key=447d26a219f86948e4a42746453807c3`).then(r => {\n      setFilms(r.data)\n    });\n  }, [moviesID]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    films;\n\n  return (\n    <>\n      <css.Btn><Link to={location.state?.from ?? \"/\"}>Go back</Link></css.Btn>\n      <css.Block>\n        {\n          (poster_path !== null) ? <css.Img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={`${title}`} /> :\n            <css.NotFoto />\n        }\n\n        <div> <css.TextBlock>\n          <css.Title>{title} ({release_date?.slice(0, 4)})</css.Title>\n          <css.Score>User Score: {vote_average}</css.Score>\n\n          <h2>Overview</h2>\n          <css.Overview>{overview}</css.Overview>\n\n          <h2>Genres</h2>\n          <p>{genres?.map(({ name }) => (<css.GenresBtn key={name}>{name}</css.GenresBtn>))}</p>\n\n        </css.TextBlock>\n          <div>\n            <css.InfoTitle>Additional information</css.InfoTitle>\n            <css.Info to=\"cast\" state={{ from: location.state?.from }}>Cast</css.Info>\n            <css.Info to=\"reviews\" state={{ from: location.state?.from }}>Reviews</css.Info>\n          </div>\n        </div>\n        <Outlet />\n      </css.Block>\n\n    </>\n  )\n}\n\nMoviesDetalies.propTypes = {\n  films: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\n  })\n};\n\nexport default MoviesDetalies"],"names":["Btn","styled","_templateObject","_taggedTemplateLiteral","Block","_templateObject2","Img","_templateObject3","Title","_templateObject4","TextBlock","_templateObject5","Score","_templateObject6","Overview","_templateObject7","GenresBtn","_templateObject8","_templateObject9","InfoTitle","_templateObject10","Info","NavLink","_templateObject11","NotFoto","_templateObject12","_location$state$from","_location$state","_location$state2","_location$state3","moviesID","useParams","_useState","useState","_useState2","_slicedToArray","films","setFilms","location","useLocation","useEffect","axios","concat","then","r","data","poster_path","title","release_date","vote_average","overview","genres","_jsxs","_Fragment","children","_jsx","css","Link","to","state","from","src","alt","slice","map","_ref","name","Outlet"],"sourceRoot":""}